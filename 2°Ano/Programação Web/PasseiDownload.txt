
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
1 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
 
 
 
 
 
 
 
Disciplina: 
Programação Web (JavaScript/PHP/MySQL) 
===================================================================== 
Apostila destinada ao Curso Técnico de Nível Médio em Informática das Escolas Estaduais de 
Educação Profissional – EEEP 
 
Equipe de Elaboração - 2012 
Adriano Gomes da Silva 
Cíntia Reis de Oliveira 
Evandilce do Carmo Pereira 
Fernanda Vieira Ribeiro 
Francisco Aislan da Silva Freitas 
João Paulo de Oliveira Lima 
Juliana Maria Jales Barbosa 
Liane Coe Girão Cartaxo 
Mirna Geyla Lopes Brandão 
Moribe Gomes de Alcântara 
Niltemberg Oliveira Carvalho 
Paulo Ricardo do Nascimento Lima 
Renanh Gonçalves de Araújo 
Renato William Rodrigues de Souza 
Valbert Oliveira Costa 
Colaboradores 
Maria Analice de Araújo Albuquerque 
Maria Danielle Araújo Mota 
Sara Maria Rodrigues Ferreira Feitosa 
Atualização – 2018 
Paulo Ricardo do Nascimento Lima 
===================================================================== 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
2 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
SUMÁRIO 
Apresentação ................................................................................................................................................. 7 
1.0 Introdução à JavaScript ........................................................................................................................... 8 
1.1 Introdução ao JavaScript ..................................................................................................................... 8 
1.2 Java é diferente de JavaScript ............................................................................................................. 9 
1.3 Entendendo o JavaScript ..................................................................................................................... 9 
1.4 Usando JavaScript ..............................................................................................................................11 
2.0 Variáveis ................................................................................................................................................ 12 
2.1 Mas o que são variáveis em programação? ....................................................................................... 12 
2.2 Mas o que seria o tipo de uma variável? ........................................................................................... 12 
2.3 Nomeando variáveis .......................................................................................................................... 13 
2.4 Declarando ou criando uma variável ................................................................................................. 14 
2.5 Linguagens de Programação Fracamente e Fortemente Tipadas ....................................................... 14 
2.6 Variáveis em JavaScript .................................................................................................................... 15 
2.6.1. Declarando ou criando uma variável JavaScript ....................................................................... 15 
2.7 Tipos de variáveis JavaScript ............................................................................................................. 16 
2.7.1 Trabalhando com String e Números em JavaScript ................................................................... 16 
2.7.2 Trabalhando com outros tipos de dados JavaScript ................................................................... 17 
2.8 Variáveis Globais e Locais ................................................................................................................. 18 
3.0 Operadores em JavaScript ..................................................................................................................... 20 
3.1 Operadores de strings ........................................................................................................................ 20 
3.2 Operadores Matemáticos ................................................................................................................... 20 
3.2.1 Aritméticos ................................................................................................................................. 20 
3.2.2 Atribuição ................................................................................................................................... 21 
3.3 Operadores de decremento e incremento .......................................................................................... 23 
3.4 Operadores relacionais ...................................................................................................................... 23 
3.5 Operadores lógicos ou booleanos ...................................................................................................... 25 
3.6 Operação de Negação: ....................................................................................................................... 25 
3.7 Operação de conjunção: .................................................................................................................... 26 
3.8 Operação de disjunção ...................................................................................................................... 26 
3.9 Precedência de Operadores ............................................................................................................... 29 
Exercícios Propostos ........................................................................................................................... 30 
4.0 Caixa de Diálogo ................................................................................................................................... 32 
4.1 Alert ................................................................................................................................................... 32 
4.2 Prompt ............................................................................................................................................... 32 
4.3 Confirm ............................................................................................................................................. 33 
Exercícios Propostos ........................................................................................................................... 33 
5.0 Estruturas de controle e repetição ......................................................................................................... 35 
5.1 Blocos de controle ............................................................................................................................. 35 
5.2 IF e ELSE .......................................................................................................................................... 36 
5.3 Atribuição condicional (ternário) ...................................................................................................... 38 
5.4 SWITCH ........................................................................................................................................... 38 
5.5 SWITCH com BREAK ..................................................................................................................... 39 
5.6 WHILE .............................................................................................................................................. 41 
5.7 DO...WHILE ..................................................................................................................................... 42 
5.8 FOR ................................................................................................................................................... 43 
5.9 FOREACH ........................................................................................................................................<!-- -->44 
5.10 BREAK. .......................................................................................................................................... 45 
5.11 CONTINUE..................................................................................................................................... 46 
Exercícios Propostos ........................................................................................................................... 46 
6.0 Objetos em JavaScript ........................................................................................................................... 48 
6.1 Objeto String, Acessando atributos e métodos .................................................................................. 48 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
3 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
6.2 Acessando atributos ........................................................................................................................... 49 
6.3 Acessando Métodos ........................................................................................................................... 49 
6.4 Objeto Number .................................................................................................................................. 50 
6.4.1 Atributos objeto Number - CONSTANTES ............................................................................... 51 
6.4.2 Representação de um número em Hexadecimal, Octal e notação científica .............................. 51 
6.5 Objeto Math....................................................................................................................................... 52 
6.5.1 Constantes .................................................................................................................................. 52 
6.5.2 Objeto Math e seus métodos ...................................................................................................... 54 
6.5.3 Arredondamentos ....................................................................................................................... 55 
6.5.4 Trigonometria ............................................................................................................................. 55 
6.5.5 Maior e Menor ............................................................................................................................ 56 
6.5.6 Número Randômico ................................................................................................................... 56 
6.5.7 Objeto Boolean ........................................................................................................................... 57 
6.5.8 Objeto Date ................................................................................................................................ 57 
6.5.9 Criando um objeto Date ............................................................................................................. 57 
6.5.10 Definindo uma data específica ................................................................................................. 58 
6.5.11 Métodos do Objeto Date........................................................................................................... 59 
Exercícios Propostos: .......................................................................................................................... 60 
7.0 Array ...................................................................................................................................................... 61 
7.1 Criando um Array .............................................................................................................................. 61 
7.2 Arrays associativos. ........................................................................................................................... 62 
7.3 Interações .......................................................................................................................................... 63 
7.4 Acessando um Array .......................................................................................................................... 64 
7.5 Alterando um Array ........................................................................................................................... 65 
7.6 Arrays multidimensionais .................................................................................................................. 66 
7.6 Funções com Arrays .......................................................................................................................... 70 
7.7Junção e Concatenação de Arrays (Vetores) ....................................................................................... 70 
7.8 Método join() .................................................................................................................................... 70 
7.8.1 Método concat() ......................................................................................................................... 71 
7.8.2 Método push() ............................................................................................................................ 72 
7.8.3 Método unshift() ......................................................................................................................... 72 
7.8.4 Método pop() .............................................................................................................................. 73 
7.8.5 Método shift() ............................................................................................................................. 73 
7.8.6 Método reverse() ........................................................................................................................ 74 
7.8.6 Método sort() .............................................................................................................................. 74 
8.0 Manipulação de Funções ....................................................................................................................... 78 
8.1 Declarando uma Função. ................................................................................................................... 78 
8.2 Escopo de Variáveis em Funções ....................................................................................................... 79 
8.3 Valor de Retorno ................................................................................................................................. 79 
8.4 Recursão. ........................................................................................................................................... 80 
Exercícios Propostos ........................................................................................................................... 80 
9.0 Eventos JavaScript ................................................................................................................................. 82 
9.1 Relação de eventos ............................................................................................................................ 82 
9.2 Evento onclick ................................................................................................................................... 84 
9.3 Evento onsubmit ................................................................................................................................ 85 
Evento onmouseover e onmouseout .................................................................................................... 87 
9.4 Eventos: onfocus e onblur ................................................................................................................. 88 
9.5 Evento: onchange ..............................................................................................................................<!-- -->89 
9.6 Eventos: onload e onunload .............................................................................................................. 90 
10.0 Document Object Model – DOM ........................................................................................................ 93 
Exercícios Propostos ........................................................................................................................... 98 
11.0 Introdução a jQuery .............................................................................................................................. 99 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
4 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
11.1 Instalação e configuração ................................................................................................................ 99 
11.2 Primeiros Passos ............................................................................................................................ 100 
11.2.1 Métodos de acesso a Elementos HTML ................................................................................. 102 
12.0 Biblioteca jQuery ............................................................................................................................... 105 
12.1 Funções de Estilo .......................................................................................................................... 105 
12.2 Função .css() ................................................................................................................................. 105 
12.3 Função .add() ................................................................................................................................. 106 
13.1.1. Função .addClasse() e removeClass(). ............................................................................ 108 
12.4 Função toggleClass() ..................................................................................................................... 109 
12.5 Funções de visibilidade ................................................................................................................. 109 
12.6 Funções show() e hide() .................................................................................................................110 
12.6.1 Função Toggle() .......................................................................................................................112 
12.6.2 Função delay() .........................................................................................................................113 
12.7 Funções de Opacidade ....................................................................................................................114 
12.7.1 Funções FadeIn() e Fadeout() .....................................................................................................115 
12.7.2 FadeTo(); .................................................................................................................................116 
12.7.3 FadeToggle() ...........................................................................................................................117 
13.0 Biblioteca jQuery UI ...........................................................................................................................119 
13.1 Instalação e configuração ...............................................................................................................119 
13.2 Datepicker. .....................................................................................................................................119 
13.3 Accordion ...................................................................................................................................... 120 
13.4 Tabs ............................................................................................................................................... 121 
13.5 Menu ............................................................................................................................................. 123 
13.6 Tooltip ........................................................................................................................................... 124 
1.0 PHP ..................................................................................................................................................... 126 
1.1 O que é PHP ................................................................................................................................... 126 
1.1.1 Um pouco da História do PHP. ................................................................................................ 127 
1.2 Instalação do Servidor PHP ......................................................................................................... 128 
1.2.1 Instalação Apache. .................................................................................................................... 128 
1.2.2 Instalação Php5. ....................................................................................................................... 129 
1.3 Características de um programa PHP. ............................................................................................. 131 
1.3.1 Imprimindo algo no navegador WEB via PHP......................................................................... 132 
1.3.2 Comentários PHP ..................................................................................................................... 132 
2.0 Iniciando um projeto com netbeans. ................................................................................................... 134 
2.1 Tipos Primitivos ........................................................................................................................... 136 
2.1.1 Tipos de Primitivos de Dados .................................................................................................. 136 
3.0 Atribuições em PHP ............................................................................................................................ 139 
3.1 Variáveis ......................................................................................................................................... 139 
3.2 Tipos de Variáveis ........................................................................................................................ 141 
3.3 Constantes ..................................................................................................................................... 144 
3.3.1 Constantes pré-definidas .......................................................................................................... 144 
3.3.2 Definindo constantes ................................................................................................................ 144 
3.4 Conversão de variável ................................................................................................................ 145 
4.0 Operadores em PHP ............................................................................................................................ 148 
4.1 Operadores de strings ...................................................................................................................... 148 
4.2 Operadores Matemáticos ............................................................................................................ 148 
4.2.1 Aritméticos ............................................................................................................................... 148 
4.2.2 Atribuição ................................................................................................................................. 149 
4.2.3 Operadores de decremento e incremento ................................................................................. 151 
4.3 Operadores relacionais<!-- -->................................................................................................................ 152 
4.4 Operadores lógicos ou booleanos ............................................................................................. 153 
4.5 Precedência de Operadores ............................................................................................................. 156 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
5 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
5.0 Interações PHP com HTML .............................................................................................................. 159 
5.1 Formulários ..................................................................................................................................... 159 
5.2 Exemplo de formulário. .................................................................................................................. 161 
5.3 Métodos Post e Get ......................................................................................................................... 164 
5.4 Método Get ...................................................................................................................................... 164 
5.5 Método Post .................................................................................................................................... 166 
6.0 Estruturas de controle e repetição ....................................................................................................... 168 
6.1 Blocos de controle ........................................................................................................................... 168 
6.2 If e else ............................................................................................................................................ 169 
6.3 Atribuição condicional (ternário) .................................................................................................... 170 
6.4 Switch ............................................................................................................................................ 171 
6.4.1 Switch com break ..................................................................................................................... 172 
6.5 While ............................................................................................................................................... 173 
6.6 Do...while ........................................................................................................................................ 175 
6.7 For ................................................................................................................................................... 175 
6.8 Foreach ............................................................................................................................................ 177 
6.9 Break ............................................................................................................................................... 178 
6.10 Continue ........................................................................................................................................ 179 
7.0 Manipulação de arrays ........................................................................................................................ 184 
7.1 Criando um Array ............................................................................................................................ 184 
7.2 Arrays Associativos. ........................................................................................................................ 185 
7.3 Interações ........................................................................................................................................ 186 
7.4 Acessando um Array ....................................................................................................................... 187 
7.5 Alterando um Array ......................................................................................................................... 188 
7.6 Arrays multidimensionais ................................................................................................................ 189 
7.7 Funções com Arrays ........................................................................................................................ 192 
Exercício resolvido com array............................................................................................................... 196 
8.0 Manipulação de funções ...................................................................................................................... 198 
8.1 Declarando uma Função. ................................................................................................................. 198 
8.2 Escopo de Variáveis em Funções .................................................................................................... 199 
8.3 Passagem de Parâmetro. .................................................................................................................. 200 
8.4 Valor de Retorno .............................................................................................................................. 201 
8.5 Recursão. ......................................................................................................................................... 202 
EXERCÍCIO RESOLVIDO COM FUNÇÕES. ...................................................................................... 203 
9.0 Manipulação de arquivos e diretórios ................................................................................................. 205 
9.1 Criando e Abrindo um Arquivo. ...................................................................................................... 205 
9.2 Gravando em um arquivo. ............................................................................................................... 206 
9.3 Fechando um arquivo. ..................................................................................................................... 207 
9.4 Lendo um arquivo. .......................................................................................................................... 208 
9.5 Copiando,Renomeando e Apagando um Arquivo ........................................................................... 209 
9.6 Manipulando Diretório. ................................................................................................................... 210 
9.7 Interações com o Browser ................................................................................................................211 
9.10 Cookies .......................................................................................................................................... 212 
9.11 Sessão ............................................................................................................................................ 216 
9.12 Requisição de Arquivos ................................................................................................................. 218 
9.13 Tratamentos de erro ................................................................................................................... 219 
1.0 Introdução a Banco de Dados ............................................................................................................. 223 
1.1 Banco de dados? ou SGBD/SGDB? Ou SQL? ............................................................................... 223 
1.2 Entendendo o que é Banco de Dados ou Base de Dados. ............................................................... 224 
1.3 Sistema Gerenciador de Banco de Dados (SGBD) ......................................................................... 225 
1.4 Banco de dados X SGBD ................................................................................................................<!-- -->225 
1.5 Linguagem SQL - Structure Query Language ................................................................................ 226 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
6 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
1.6 Anatomia de um Banco de Dados ................................................................................................... 227 
Exercícios Propostos ........................................................................................................................... 228 
2.0 Introdução ao MySQL ......................................................................................................................... 230 
2.1 Um pouco da história do MySQL ................................................................................................... 230 
2.2 Características ................................................................................................................................. 231 
2.2.1 Portabilidade ............................................................................................................................ 231 
2.2.2 Capacidades .............................................................................................................................. 231 
2.2.3Multithreads .............................................................................................................................. 231 
2.2.4 Licença de uso .......................................................................................................................... 231 
2.2.5 Formas de armazenamento ....................................................................................................... 232 
2.2.6 Suporta triggers ........................................................................................................................ 232 
2.2.7 Suporta cursors (Non-Scrollable e Non-Updatable); ............................................................... 232 
2.2.8 Suporta stored procedures e functions; .................................................................................... 232 
2.2.9 Suporte a replicação ................................................................................................................. 232 
2.2.10 Suporte a clusterização ........................................................................................................... 233 
2.2.11 Visões ..................................................................................................................................... 233 
Exercícios Propostos .......................................................................................................................... 233 
3.0 Instalando o Mysql Server .................................................................................................................. 234 
3.1 Instalação no Linux ......................................................................................................................... 234 
3.2 Instalação no Windows ................................................................................................................... 239 
4.0 Bases de dados MySQL ...................................................................................................................... 252 
4.1 Criando uma base de dados ............................................................................................................. 252 
4.2 Listando base de dados .................................................................................................................... 253 
4.3 Ativando/Selecionando uma base de dados .................................................................................... 253 
4.4 Deletando uma base de dado ........................................................................................................... 254 
4.5 Alterando uma base de dados .......................................................................................................... 254 
4.6 Conjunto de caracteres .................................................................................................................... 254 
4.6.1 Conjuntos de caracteres e collations em Geral ........................................................................ 254 
4.6.2 Conjunto de caracteres e collations no MySQL ....................................................................... 255 
4.6.3 Conjunto de caracteres e collation de banco de dados ............................................................. 256 
Exercícios Propostos .......................................................................................................................... 257 
5.0 Manipulando tabelas ........................................................................................................................... 258 
5.1 Criando tabelas no MySQL Server ................................................................................................. 258 
5.2 Listando tabelas no MySQL Server ................................................................................................ 259 
5.3 Alterando uma tabela no MySQL Server ........................................................................................ 260 
5.3.1 Renomeando uma tabela com o comando ALTER TABLE. .................................................... 260 
5.3.2 Adicionando uma nova coluna com o comando ALTER TABLE. ........................................... 260 
5.3.3 Removendo uma coluna com o comando ALTER TABLE. ..................................................... 261 
5.3.4 Renomeando um campo com o comando ALTER TABLE. ..................................................... 261 
5.4 Deletando uma tabela no MySQL Server........................................................................................ 261 
5.5 Saiba mais... .................................................................................................................................... 262 
5.5.1 Tipos de dados do MySQL ....................................................................................................... 262 
5.5.2 Tipo de tabelas/ Storage Engine/ Motor de Armazenamento do MySQL ................................ 265 
Exercícios Propostos ........................................................................................................................... 267 
6.0 CRUD .................................................................................................................................................. 269 
6.1 CRUD (Create, Read, Update e Delete) .......................................................................................... 269 
6.2 INSERT ........................................................................................................................................... 269 
6.3 SELECT .......................................................................................................................................... 270 
6.4 UPDATE ......................................................................................................................................... 270 
6.5 DELETE .......................................................................................................................................... 271 
Referências ................................................................................................................................................ 273 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
7 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Apresentação 
O manual apresenta aulas práticas e conceitos importantes para o entendimento na prática, está distribuído 
em três partes. 
Elaborado no intuito de qualificar o processo de formação, este Manual é um instrumento pedagógico que 
se constitui como um mediador para facilitar o processo de<!-- -->ensino-aprendizagem em sala de aula. 
1ª Parte 
Apresenta alguns fundamentos de JavaScript uma linguagem de programação para navegadores, onde será 
muito importante os conhecimentos adquirido em lógica de programação para facilitar o entendimento, 
neste capitulo veremos operadores da linguagem, estruturas de controle, funções, eventos e objetos array, 
bem como exercícios e mais exemplos inclusive de orientação a objetos usando a linguagem javascript. 
2ª Parte 
Introdução a linguagem de programação PHP, conhecendo seus operadores, estruturas de controle, 
definição de funções e arrays, onde logo podemos fazer a integração da linguagem com o banco de dados 
mysql. Framework Jquery uma biblioteca JavaScript cross-browser desenvolvida para simplificar os 
scripts client side que interagem com o HTML, neste capítulo também abordaremos JqueryUI e Jquery. 
Formulários web, neste capítulo iremos desenvolver alguns formulários web, para aplicarmos os 
conhecimentos que estamos adquirindo no decorrer do processo de aprendizagem. 
3ª Parte 
Neste capítulo vamos trabalhar entender um pouco sobre o que é um banco de dados e logo iremos 
introduzir os trabalhos utilizando o SGBD MySQL que irá ser melhor abordado em sua continuação no 
próximo semestre. 
Este material teve como grande contribuição e referência para alguns capítulos o material do projeto 
MEDIOTEC – SEDUC, como apostilas do módulo II e III, em uma verificação e adaptação do material, 
por ser um material muito importante e de altíssima qualidade, aproximando bastante a experiência à 
pratica do técnico em informática na área de desenvolvimento para web. 
Outras referências de pesquisa e adaptação, foram de matérias de sites e artigos confiáveis da internet. 
O material em questão já havia sido desenvolvido pela antiga turma de produção dos materiais, onde há 
sempre a necessidade de atualizações e ajustes para a demanda e o novo perfil de profissional que o 
mercado necessita. 
Por isso faça um bom proveito dos conhecimentos aqui destacados, e que você possa ir muito mais além, 
com práticas e vivências no dia a dia para a sua preparação no seu processo de aprendizagem. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
8 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
1.0 Introdução à JavaScript 
JavaScript é uma linguagem para auxílio na criação de Home-Pages, as funções escritas em JavaScript 
podem ser embutidas dentro de seu documento HTML, possibilitando o incremento das funcionalidades 
do seu documento HTML com elementos interessantes. Sendo possível: responder facilmente a eventos 
iniciados pelo usuário, incluir efeitos que tornem sua página dinâmica. Logo, podemos criar sofisticadas 
páginas com a ajuda desta linguagem. 
1.1 Introdução ao JavaScript 
 
JavaScript é uma linguagem de programação voltada para ambiente web que tem como objetivo 
&quot;interagir&quot; com a página HTML. 
As páginas HTML foram construídas após a criação da internet com o objetivo de divulgar notas 
científicas e artigos técnicos entre as universidades norte-americanas. 
A metodologia aplicada no desenvolvimento e criação da linguagem HTML informava que o conteúdo 
das páginas HTML seria estático. Eles não tinham a visão que a internet teria um papel tão grande no 
amadurecimento da sociedade. 
Inicialmente JavaScript não era JavaScript, mas sim LiveScript, uma tecnologia criada pela Netscape, 
quando ela estava desenvolvendo a versão 
2.0 de seu navegador. Ela se destacou principalmente pelo fato de não precisar ser compilada 
(interpretada), sendo adicionada no documento HTML e de seus scripts não serem lentos, uma vez que 
eles não precisavam ser executados no servidor, mas sim no PC do usuário que estava acessando a página. 
Na época, não houve muito interesse pelo LiveScript, pois havia um grande marketing em relação a 
linguagem Java, criada pela Sun Microsystems há 3 anos e que oferecia um potencial muito maior que o 
LiveScript. 
Para aproveitar deste marketing, a Netscape tornou o Netscape 2.0 compatível com a linguagem Java e 
deu apoio a Sun Microsystems para reestruturar o LiveScript de acordo com a linguagem Java. Naquele 
momento, o LiveScript se tornou JavaScript. 
A consequência desta mudança foi em criar uma linguagem de script que conseguiu unir os dois 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
9 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
universos: um simples como LiveScript e outro robusto, poderoso e &quot;conhecido&quot; como Java. 
A partir da versão 2.0 do Netscape e da versão 3.0 do Internet Explorer, todo navegador web suporta 
JavaScript e desde então o JavaScript tem ganhado grandes evoluções. Hoje o JavaScript é um padrão 
aberto e empresas de todo o mundo o suportam. 
1.2 Java é diferente de JavaScript 
Apesar dos nomes bem parecidos, Java não é o mesmo que JavaScript. Estas são duas técnicas diferentes 
de programação na Internet. Java é uma linguagem de programação. JavaScript é uma linguagem de 
hipertexto. 
A linguagem de programação JavaScript, desenvolvida pela Netscape, Inc., não faz parte da plataforma 
Java. 
JavaScript não cria applets ou aplicativos independentes. Em sua forma mais comum hoje, JavaScript 
reside dentro de documentos HTML e pode fornecer níveis de interatividade com páginas da Web que não 
podem ser conseguidos com HTML simples. 
As diferenças principais entre Java e JavaScript estão listadas. 
Java é uma linguagem de programação OOP, ao passo que Java Script é uma linguagem de scripts OOP. 
Java cria aplicativos executados em uma máquina virtual ou navegador, ao passo que o código JavaScript 
é executado apenas em um navegador. 
O código Java precisa ser compilado, ao passo que os códigos JavaScript estão totalmente em texto, 
apenas interpretado. 
Eles requerem plug-ins diferentes. 
1.3 Entendendo o JavaScript 
 
Por que o JavaScript é tão rápido? Acredito que esta seja uma das perguntas que a maioria dos 
desenvolvedores fazem. Para toda uma pergunta simples há uma resposta simples: Ela não é processada 
no servidor! 
JavaScript não é processada no servidor por que ela não é uma linguagem compilada, mas sim 
interpretada. Quem a interpreta não é o servidor, mas sim o navegador do usuário que acessa a página 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
10 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
HTML. Então, todo o processamento dos scripts em JavaScript fica por conta do PC do usuário. Quanto 
mais rápido ele for, mais rápido será o processamento. 
Para ter certeza disso, execute uma página HTML (que execute uma função em JavaScript) que está no 
seu próprio PC e acesse esta mesma página em um servidor web. Você irá perceber que a diferença de 
performance é muito pequena, pois o tempo que o navegador irá perder será o de baixar a página HTML, 
juntamente com suas dependências (em JavaScript ou não) para depois executá-la. 
 
 
Já são embutidas no navegador do PC do usuário as bibliotecas de run-time para que ele entenda os scripts 
em JavaScript. Caso você use um navegador anterior ao Netscape 2.0 e ao Internet Explorer 3.0, 
provavelmente você não irá conseguir executar os scripts escritos em JavaScript, tampouco em qualquer 
outra linguagem. Erros no JavaScript 
Como o JavaScript é uma linguagem interpretada, todo e qualquer erro será detectado na hora em que o 
navegador estiver lendo e/ou executando os scripts em JavaScript. Para verificar se seu script está errado 
ou houve algum erro de execução, basta verificar a barra de status do seu navegador. Caso ela tenha um 
ícone de aviso, informando um texto parecido ou semelhante com &quot;Erro na consulta&quot;, clique duas vezes 
no ícone de aviso para visualizar os erros. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à<!-- -->Educação Profissional 
 
11 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
1.4 Usando JavaScript 
Um código JavaScript pode ser inserido em um documento HTML de duas formas: 
Colocando o código JavaScript como filho de um elemento com a tag script; 
 
Utilizando o atributo src de um elemento com a tag script no qual devemos passar o caminho relativo ou 
absoluto para um arquivo que contenha o código JavaScript. 
 
Exercícios Propostos 
Como aconteceu a evolução da tecnologia JavaScript no decorrer dos anos? 
Qual a diferença entre Java e JavaScript? 
Quais as formas de se trabalhar com JavaScript junto com html. Dê exemplos. 
Como funciona o processamento do JavaScript em uma página web? 
Qual a importância do JavaScript em um projeto Web? 
Pesquise e cite quais frameworks para JavaScript existem atualmente no mercado. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
12 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
2.0 Variáveis 
 
Sim, variáveis. 
Na programação, a utilização da matemática é constante e é muito importante que você tenha um bom 
raciocínio lógico. Lembra daquela matéria de lógica matemática que você estudou no ensino fundamental 
e médio, achando que nunca iria utilizar o que estava aprendendo? Adivinha, vamos precisar daqueles 
conhecimentos agora! 
2.1 Mas o que são variáveis em programação? 
 
Vamos entender variável, como uma caixa, na qual você pode dar o nome que lhe achar conveniente, e 
guardar o conteúdo que desejar. 
Ou seja, toda variável tem um nome, valor e tipo. 
2.2 Mas o que seria o tipo de uma variável? 
O tipo é uma classificação que damos a variável, essa classificação informa qual forma de dado se 
encontra ali armazenado. 
As variáveis, podem ser classificadas com os tipos: 
 
 Inteiro: Todo e qualquer dado numérico que pertença ao conjunto de números inteiros 
relativos (negativo, nulo ou positivo). Exemplos: {...-4,-3,-2,-1,0,1,2,3, 4...}. 
 Real: Todo e qualquer dado numérico que pertença ao conjunto de números reais (negativo, 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
13 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
nulo ou positivo). Exemplos: {15.34; 123.08; 0.005 -12.0; 510.20}. 
 Numérico: Trata-se de todo e qualquer número que pertença ao conjunto dos inteiros ou 
reais, também abrange números binários, octal e hexadecimal. 
 Caracteres: são letras isoladas. Exemplo: {&#x27;a&#x27;, &#x27;d&#x27;, &#x27;A&#x27;, &#x27;h&#x27;}. 
 Dados literais: Conhecido também como Conjunto de caracteres ou String, é todo e 
qualquer dado composto por um conjunto de caracteres alfanuméricos (números, letras e 
caracteres especiais). Exemplos: {“Aluno Aprovado”, “10% de multa”, “Confirma a exclusão ??”, 
“S”, “99-3000-2”, “email”,”123nm”,”fd54fd”}. 
 Lógico: A existência deste tipo de dado é, de certo modo, um reflexo da maneira como os 
computadores funcionam. Muitas vezes, estes tipos de dados são chamados de booleanos, devido à 
significativa contribuição de Boole a área da lógica matemática. A todo e qualquer dado que só 
pode assumir duas situações dados biestáveis, algo como por exemplo {0/ 1, verdadeiro/falso, 
sim/não, true/false}. 
Então, o tipo de uma variável é determinado pelo conteúdo que ela guarda. Se uma variável armazena um 
número inteiro ela é do tipo inteiro, se é um conjunto de caracteres ela é do tipo String. 
Dependendo da linguagem de programação que você estiver programando, os nomes dos tipos listados 
acima podem mudar e novos tipos também poderão surgir. 
2.3 Nomeando variáveis 
No tópico anterior vimos que as varáveis precisam de nome, tipo e valor. Já estudamos um pouco sobre 
tipos de variáveis, agora iremos discutir sobre como criar um nome ou identificador válido para uma 
variável. 
As regras para se criar um identificador de variável podem sofrer algumas alterações dependendo da 
linguagem de programação adotada vamos listar as regras que geralmente são adotadas pela maioria: 
 
Os identificadores são case sensitive, ou seja, faz distinção entre maiúsculas e minúsculas. Isso significa 
que um nome de variável, como meuContador, é diferente do nome de variável MEUCountador; 
Nomes de variáveis podem ser de qualquer comprimento, em algumas linguagens existe limite no número 
de caracteres que compõe o identificador, por essa e pela questão de legibilidade tente não ultrapassar 15 
caracteres. 
Crie identificadores que informe explicitamente para que aquela variável irá servir na composição do seu 
programa, ou seja se uma variável vai armazenar um valor inteiro que irá aumentar de um em um até 
chegar 100, coloque o nome dessa variável de contador 
O primeiro caractere deve ser uma letra ASCII (em maiúscula ou minúscula) ou um caractere de 
sublinhado (_). Observe que um número não pode ser usado como o primeiro caractere. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
14 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Os caracteres subsequentes devem ser letras, números ou sublinhados (_). 
O nome da variável não deve ser uma palavra reservada. Existem palavras que são utilizadas pela 
linguagem de programação, que você está utilizando para implementar seus programas, para controlar e 
estruturar seu algoritmo. Essas palavras classificadas com o nome de palavras reservadas. 
 
Questão: Quais dos identificadores de variáveis abaixo são válidos? 
_pagecount 
99Balloons 
Number_Items 
Alpha&amp;Beta 
Part9 
2.4 Declarando ou criando uma variável 
Declarar uma variável tecnicamente é pedir ao sistema operacional um espaço exclusivo na memória 
RAM do seu computador para armazenar uma informação. 
Abaixo temos exemplos de declaração e inicialização de variáveis em linguagens de programação 
distintas: 
String nome = new String(“Jonas”); 
int idade = 25; 
char opcao = ‘S’; 
Inteiro quantidade = 100; 
contador = 1; 
modeloCarro = “Celta”; 
Perceba que dependendo da linguagem de programação processo de declaração é diferente. 
2.5 Linguagens de Programação Fracamente e Fortemente Tipadas 
Linguagem fortemente tipadas(LST), são linguagens de programação que cada variável do programa, 
representa um tipo bem definido, ou seja explicitamente você será obrigado a declarar o tipo da variável 
ao qual estará declarando e caso tente fazer operações com variáveis de tipos diferentes precisará fazer 
conversões, caso contrário irá acontecer erros em seu código. 
Exemplo de declaração de variáveis fortemente tipadas: 
Inteiro contador = 1; 
Caracter sexo = ‘F’; 
String nome = “Jonas”; 
Já nas linguagens de programação que são classificadas como Linguagem de Programação Fracamente 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
15 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Tipada(LWT) ou de tipagem dinâmica, não precisamos colocar o tipo da variável antes de seu 
identificador, além do tipo da variável ser modificado em tempo de execução sem precisar fazer 
conversão, ou seja o tipo da linguagem é modificada automaticamente segundo o valor que você armazena 
na mesma. 
idade = “18” - (tipo String); 
idade = 18 - (agora a varável idade é do tipo inteiro); 
2.6 Variáveis em JavaScript 
Como a linguagem de programação escolhida para se aprender lógica de programação foi o JavaScript, 
vamos estudar nesse tópico como funciona a manipulação de variáveis nessa linguagem. 
2.6.1. Declarando ou criando uma variável JavaScript 
Diferente da maioria das linguagens o JavaScript define as variáveis dinamicamente, portanto ao atribuir 
uma variável ele escolhe o tipo conforme o valor passado para a variável, não sendo necessário especificar 
o mesmo. 
Existem dois tipos de sintaxe de declaração de variável em JavaScript que são: 
 
Lembre-se que nome-da-variável precisa seguir todas<!-- -->as regras do tópico nomeando variáveis. Abaixo 
palavras reservadas da linguagem de programação JavaScript: 
 
ou nome-da-variável = valor-da-
variável; 
var nome-da-variável = valor-da-variável; 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
16 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
 
2.7 Tipos de variáveis JavaScript 
Como já mencionado, no JavaScript não declaramos explicitamente o tipo de uma variável. Por exemplo, 
se a variável recebe um número inteiro declaramos, por exemplo, int x, ou se ela recebe um número real 
declaramos float y, mas no JavaScript isso não acontece. O tipo de uma variável é definido 
dinamicamente, não precisando o desenvolvedor especificar o seu tipo. 
Veremos nos tópicos abaixo como trabalhar com os tipos de varáveis JavaScript. 
2.7.1 Trabalhando com String e Números em JavaScript 
Vamos ver como declaramos Número e String no JavaScript abaixo: 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
17 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Quando declaramos uma String utilizamos aspas duplas ( &quot; ) ou simples ( &#x27; ). Você pode declarar número 
utilizando aspas, mas não é obrigatório. Se utilizarmos no início de uma String a (“) temos que 
finalizarmos ela com a (”), isso vale para quando utilizamos ( &#x27; ) . 
2.7.2 Trabalhando com outros tipos de dados JavaScript 
Agora, vamos descrever outros tipos de dados ou variáveis suportadas no JavaScript. 
Booleanos: suportam dois valores true/false (verdadeiro ou falso). Exemplo: 
Constante: Valor que não se altera no decorrer do código. Exemplo: 
 
Undefined: quando você tenta acessar um atributo de um objeto que não existe ou uma variável que ainda 
não foi inicializada o JavaScript define o valor dela como undefined. 
Null: é um tipo especial de valor que indica para o navegador que a variável está vazia. O valor null que 
significa ausência de valor, vazio ou nada quando atribuído a uma variável está definindo-a como vazia. A 
diferença do null para undefined é que se uma variável tem o valor null ela está definida. 
Array: o array é um tipo composto de dado. O array é uma estrutura de dados que possibilita guardar 
vários dados e indexa-los utilizando índices. Ou seja, uma variável que pode conter vários valores 
diferentes. 
 
 
Object: no JavaScript também podemos trabalhar com variáveis do tipo objeto, que são variáveis robustas 
onde podemos guarda desde um único valor até um programa completo. Iremos discutir sobre esse tipo em 
cursos posteriores. Veja abaixo um exemplo de criação de uma variável do tipo objeto no JavaScript. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
18 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Exemplo: 
2.8 Variáveis Globais e Locais 
As variáveis são classificadas em dois tipos em relação a sua área de atuação, que são as globais e as 
locais. A diferença entre elas é: 
Variável Global: Criada ou declarada fora de uma função, portanto podem ser utilizadas a qualquer 
momento no seu script; 
Variável Local: Criada ou declarada dentro de uma função, portanto só podem ser utilizadas dentro da 
função criada. 
Funções são bloco de códigos que são executados todas as vezes que invocados por um identificador. 
Iremos discutir mais sobre funções em capítulos posteriores. 
 
Exercícios Propostos: 
Qual a principal finalidade de uma variável? 
O que significa tipagem dinâmica. 
Das variáveis abaixo, quais possuem nomenclaturas válidas na linguagem JavaScript. 
a b; a_1_; _início; @nome; val_!; 
nome; a_|_; #valor; palavra; tele#; 
123;  = ; VALOR_MAIOR;  ; all; 
 
Crie dez variáveis atribuindo valores diversos, logo após use o comando document.write() 
pra imprimir na tela do browser, exemplo: 
&lt;script&gt; 
var nome = “Maria Cavalcante”; document.write(nome); 
&lt;/script&gt; 
Quais os tipos de variáveis que podemos citar em JavaScript. 
Como podemos distinguir um tipo de variável de outro, uma vez que a tipagem é feita de forma dinâmica 
no JavaScript. 
Qual a principal finalidade de um constante e como elas são definidas em JavaScript. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
19 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Em que momentos precisamos converter uma variável de um tipo em outro. Crie uma constante e imprima 
com o comando document.write(); 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
20 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
3.0 Operadores em JavaScript 
Neste capítulo iremos estudar os tipos e quais os operadores; Falar do conceito de atribuição e 
concatenação de String; exemplificar os operadores, sua importância e funcionamento 
Os operadores têm seu papel importante dentro de qualquer linguagem de programação. É através deles 
que podemos realizar diversos operações dentro de um programa, seja ela de atribuição, aritmética, 
relacional, lógico, dentre outros. Em JavaScript não é diferente, os operadores são utilizados 
constantemente, porém existem algumas regras que veremos mais adiante. 
3.1 Operadores de strings 
São operadores utilizados para unir o conteúdo de uma string a outra, com isso podemos dizer que há dois 
operadores de string. O primeiro é o operador de concatenação (&#x27;+&#x27;) que já utilizamos em exemplos 
anteriores, ele retorna a concatenação dos seus argumentos direito e esquerdo. O segundo é o operador de 
atribuição de concatenação (&#x27;+=&#x27;), que acrescenta o argumento do lado direito no argumento do lado 
esquerdo. 
Observe o exemplo abaixo: 
Nesse exemplo pode-se observar a declaração da variável d, logo após temos uma inicialização e 
atribuição de concatenação em uma mesma linha, isso é possível em JavaScript, deixando o código mais 
otimizado, porém menos legível. 
3.2 Operadores Matemáticos 
3.2.1 Aritméticos 
Chamamos de operadores aritméticos o conjunto de símbolos que representa as operações básicas da 
matemática. 
Operações Operadores Exemplo Resposta 
Adição + 3 + 5 8 
Subtração - 20 – 5 15 
Multiplicação * 7 * 8 56 
Divisão / 15 / 3 5 
Módulo (Resto da divisão) % 10 % 3 1 
Negação (Numero Posto) -(valor) Se for 15 a atribuição -15 
 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
21 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
3.2.2 Atribuição 
O operador básico de atribuição é &quot;=&quot; (igual). Com ele podemos atribuir valores as variáveis como foi 
visto em exemplos anteriores. Isto quer dizer que o operando da esquerda recebe o valor da expressão da 
direita (ou seja, &quot;é configurado para&quot;). Mas podemos usar algumas técnicas, observe o exemplo abaixo: 
Resultado: a= 9, b=4 
Além do operador básico de atribuição, há &quot;operadores combinados&quot; usados para array e string, eles 
permitem pegar um valor de uma expressão e então usar seu próprio valor para o resultado daquela 
expressão. 
Por exemplo: 
 
Resultado: a = 15, b = Bom Dia! 
Observe a expressão: a = 3 e logo após a*=5. Isto significa a mesma coisa de a = a * 5, ou, a = 3 *5. A 
ideia pode ser usada para string, como foi feito com a variável b, onde b = “Bom”, logo após usamos 
ponto(+) e igual(=) para concatenar os valores, ficando assim: b+=”Dia!”. Lembrando que isso significa a 
mesma coisa que b = b+“Dia”. Observe mais um exemplo: 
 
Resultado: Bom Dia turma! 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
22 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Podemos definir uma sequência com duas concatenações, onde a = “Dia”+“turma!” e logo após temos b = 
“Bom”+“Dia turma!”. 
Os operadores de atribuição são usados para economizar linhas de código, deixando assim o código<!-- -->mais 
funcional e otimizado. A tabela abaixo mostra os principais operadores de atribuição: 
Operadores Descrição 
= Atribuição simples. 
+= Soma, depois atribui. Quando usado com Strings concatena. 
-= Subtrai, depois atribui. 
*= Multiplica, depois atribui. 
/= Divide, depois atribui. 
%= Modulo(resto) da divisão, depois atribui. 
Observe um exemplo aplicando os operadores. 
 
Resultado : 24 - 12 - 2 - 5 - 4 
Vale ressaltar que a cada document.write(), o valor de a sofre modificações. Isso devido a atribuição feita 
após a operação. Usamos o operador ponto (+) para concatenar os valores obtidos com &lt;br/&gt; código 
usado em HTML para quebra de linha. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
23 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
3.3 Operadores de decremento e incremento 
São operadores usados para atribuir em 1 ou -1 a variável, isso pode ser feito antes ou depois da execução 
de determinada variável. A tabela abaixo mostra tais operadores: 
Operadores Descrição 
++a Pré-incremento. Incrementa a em um e, então, retorna a. 
a++ Pós-incremento. Retorna a, então, incrementa a em um. 
- -a Pré-decremento. Decrementa a em um e, então, retorna a 
a- - Pós-decremento. Retorna a, então, decrementa a em um 
Exemplo: 
 
Resultado : 2 2 2 2 1 
Nesse exemplo temos uma forma aplicada do uso de decremento e incremento, lembrando que a variável 
a pode ter qualquer nome. Também podemos fazer um comparativo com o pré-incremento ou incremento-
prefixado com operações que já conhecemos, observe: 
Operador Forma extensa. Forma simplificada 
++a a = a + 1 a+=1 
- -a a = a + 1 a -=1 
3.4 Operadores relacionais 
Os operadores relacionais ou conhecidos também como operadores de comparação, são utilizados para 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
24 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
fazer determinadas comparações entre valores ou expressões, resultando sempre um valor booleano 
verdadeiro ou falso(TRUE ou FALSE). Para utilizarmos esses operadores usamos a seguinte sintaxe: 
(valor ou expressão ) + ( comparador) + ( segundo valor ou expressão ) 
Observe a tabela abaixo: 
 
Comparadores Descrição 
== Igual. Resulta em TRUE se as expressões forem iguais. 
=== Idêntico. Resulta em TRUE se as iguais e do mesmo tipo de dados. 
!= Diferente. Resulta verdadeiro se as variáveis foram diferentes. 
&lt; Menor ou menor que. Resulta TRUE se a primeira expressão for menor. 
&gt; Maior ou maior que. Resulta TRUE se a primeira expressão for maior. 
&lt;= Menor ou igual. Resulta TRUE se a primeira expressão for menor ou igual. 
&gt;= Maior ou igual. Resulta TRUE se a primeira expressão for maior ou igual. 
 
Veja um exemplo prático: 
a &lt;= b 
Compara se a é menor ou igual a b, onde, retorna verdadeiro (TRUE), caso contrário retorna falso 
(FALSE). 
Para testarmos essas comparações podemos utilizar o condicional “?:” (ou ternário), sua sintaxe é a 
seguinte: 
(expressão booleana) ? (executa caso verdadeiro) : (executa caso falso); 
Agora podemos ver um exemplo envolvendo as sintaxes e empregabilidade dos comparadores: 
 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
25 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Nesse exemplo declaramos e iniciamos três variáveis. Usamos então o comando document.write() para 
imprimir o resultado, onde o condicional “?:” foi utilizado. Iniciamos as comparações de a, b e c, caso a 
comparação individual retorne TRUE, imprime verdadeiro, caso retorne FALSE, imprime falso. Observe 
que o comparador “===” compara o valor e o tipo, retornando FALSE por b se tratar de um tipo inteiro, e 
c um tipo ponto flutuante, já o comparador “==” compara somente os valores onde 45 é igual a 45.0 
retornando verdadeiro. Também podemos usar o operador “!==” onde tem a função semelhantemente ao 
operador “!=” , mas retorna TRUE se os tipos forem diferentes. Se a variável for do tipo booleano, 
podemos compará-los assim: 
a == TRUE, a == FALSE 
3.5 Operadores lógicos ou booleanos 
São utilizados para avaliar expressões lógicas. Estes operadores servem para avaliar expressões que 
resultam em valores lógico sendo verdadeiro ou falso: 
E &amp;&amp; 
OU || 
XOR ^ 
Não ! 
 
Esses operadores tem a finalidade de novas proposições lógicas composta a partir de outras proposições 
lógicas simples. Observe: 
Operador Função 
não negação 
e conjunção 
Ou exclusivo(xor) disjunção exclusiva 
ou disjunção 
 
Com isso podemos construir a Tabela verdade onde trabalhamos com todas as possibilidades combinatória 
entre os valores de diversas variáveis envolvidas, as quais se encontram em apenas duas situações (V e F), 
e um conjunto de operadores lógicos. Veja o comportamento dessas variáveis: 
3.6 Operação de Negação: 
A (!) não A 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
26 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
F V 
V F 
Trazendo para o nosso cotidiano: 
Considerando que A = “Está chovendo”, sua negação seria : “Não está chovendo”. Considerando que A = 
“Não está chovendo” sua negação seria : “Está chovendo” 
3.7 Operação de conjunção: 
A B A e B 
F F F 
F V F 
V F F 
V V V 
 
Trazendo para o nosso cotidiano: 
Imagine que acontecerá um casamento: 
Considerando que A = “Noivo presente” e B = “Noiva presente”. 
Sabemos que um casamento só pode se realizar, se os 2 estejam presente 
3.8 Operação de disjunção 
 Não exclusiva 
A B A ou B 
F F F 
F V V 
V F V 
V V V 
 
Trazendo para o nosso cotidiano: 
Imagine que acontecerá uma prova e para realizá-la você precisará da sua Identidade ou título de eleitor 
no dia da prova. 
Considerando que A = “Identidade” e B = “Título de eleitor”. 
Sabemos que o candidato precisa de pelo menos 1 dos documentos para realizar a prova. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
27 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
 Exclusiva 
A B A xor B 
F F F 
F V V 
V F V 
V V F 
 
Trazendo para o nosso cotidiano: 
Imagine que Cateriny nasceu em Fortaleza. Se for indagado para Cateriny se ela nasceu em Crato, 
Juazeiro do Norte, Sobral ou Fortaleza. Ela iria escolher apenas umas dessas opções que seria Fortaleza. 
Não há possibilidade de Cateriny nascer em mais de uma cidade. 
Considerando que A = “Crato” e B = “Juazeiro do Norte” e C=”Sobral” e D=”Fortaleza”. 
A expressão: A xor B xor C xor D só poderá ser verdadeira se tiver apenas uma reposta válida. 
São chamados de operadores lógicos ou booleanos por se tratar de comparadores de duas ou mais 
expressões lógicas entre si, fazendo agrupamento de testes condicionais e tem como retorno um resultado 
booleano. 
Na tabela abaixo temos os operadores e suas descrições: 
 
Operador Descrição 
( a &amp;&amp; b ) E : Verdadeiro se tanto a quanto b forem verdadeiros. 
( a || b ) OU : Verdadeiro se a ou b forem verdadeiros. 
( a^b ) XOR: somente um pode ser verdade para que a expressão seja verdadeira(bit-a-
bit) 
( ! a ) NOT : Verdadeiro se a for falso, usado para inverter o resultado da 
condição. 
 
Exemplo: 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
28 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
29 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
3.9 Precedência de Operadores 
Agora já conhecemos uma boa quantidade de operadores no JavaScript, falta agora conhecer a 
precedência de cada um deles, ou seja, quem é mais importante, qual operador é avaliado primeiro e qual 
é avaliado em seguida. Observe o seguinte exemplo: 
O resultado será 17, pois<!-- -->o operador * tem maior precedência em relação ao operador +. Primeiro ocorre a 
multiplicação 2*6, resultando em 12, em seguida a soma de 5 + 12. Caso desejar realizar a operação com 
o operador + para só em seguida realizar a operação com o operador *, temos que fazer conforme o 
exemplo abaixo: 
 
Observe que utilizamos os parênteses para determinarmos quem deve ser executado primeiro, assim 
alterando o resultado para 42. Os parênteses determinam qual bloco de código executa primeiro, e 
também serve para isolar determinadas operações. Veja mais um exemplo onde as operações são feitas 
separadamente. Primeiro executa a soma, em seguida a subtração e só então é executado a multiplicação, 
imprimindo um resultado final 21: 
Exemplo: 
A tabela a seguir lista os operadores JavaScript, ordenados da maior até a menor precedência. Operadores 
com a mesma precedência são avaliados da esquerda para a direita. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
30 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
 
É importante lembrar que primeiro o JavaScript executará todas as operações que estiverem entre 
parênteses, se dentro dos parênteses houver diversas operações, a precedência dos operadores será 
utilizada para definir a ordem. Após resolver todas as operações dos parentes, o JavaScript volta a resolver 
o que está fora dos parênteses baseando-se na tabela de precedência de operadores. Havendo operadores 
de mesma prioridade o JavaScript resolverá a operação da esquerda para direita. 
Também podemos trabalhar com procedência de parênteses, fazendo associações com um ou mais 
operadores, observe o seguinte exemplo: 
 
Seguindo a ordem de procedência temos: 
(5) * (6) / (16 - ((7)*2)) &gt;&gt;&gt; 5 * 6 / (16 - (14)) &gt;&gt;&gt; 5 * 6 / 2 &gt;&gt;&gt; 30 / 2 
Resultado: 15 
Observe que primeiro executa todos os parênteses, e só então temos as procedências das demais 
operações. 
Exercícios Propostos 
Qual a finalidade dos operadores de strings? 
Quais os operadores de decremento e incremento? Cite alguns exemplos: 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
31 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Qual a finalidade do operador aritmético %(modulo)? 
Cite os operadores relacionais, mostre alguns exemplos. 
Quais operadores lógicos ou booleanos? 
Quais os operadores de atribuição? 
Qual a sintaxe do uso de ternário e cite um exemplo? 
Observe o código abaixo e diga quais das operações são executadas primeiro, coloque a resposta em 
ordem decrescente. 
A = 8*5-3+4/2+19%5/2+1; 
Faça testes com os operadores relacionais substituindo o operados &gt; do código fonte abaixo: 
&lt;script&gt; 
var1 = 2.2564; 
var2 = 2.2635; 
document.write(var1 &gt; var2 ? “sim” : “não”); 
&lt;/script&gt; 
2. Usando o operador de concatenação “+” para montar a seguinte frase abaixo: 
&lt;script&gt; 
a = “de”; b = “é um”; c = “comunicação”; c = “a”; 
d = “internet”; e = “meio”; 
document.write( ..... ); 
&lt;/script&gt; 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
32 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
4.0 Caixa de Diálogo 
Um recurso interessante de JavaScript é a possibilidade de criar caixas de diálogo simples, que podem ser 
muito informativas aos usuários que a visualizam. 
Essas caixas de diálogo podem ser de alerta, de confirmação ou de prompt de entrada. Todas elas são 
chamadas de forma simples e intuitiva por uma função. 
4.1 Alert 
As caixas de diálogo de alerta são simples e informativas. Elas, geralmente, são utilizadas em validação 
de formulários ou bloqueio de ações. 
Sua função é mostrar apenas uma mensagem com um botão de confirmação para que esta seja fechada. 
Para chamar esta caixa de diálogo usamos a função alert(). Esta função recebe como parâmetro uma 
string que será a mensagem a ser exibida. Vejamos o código abaixo: 
 
Em caixas de diálogo há a possibilidade de controlar o fluxo de texto usando \n para a quebra de linhas. 
 
4.2 Prompt 
A caixa de diálogo de prompt nos possibilita requerer uma entrada ao usuário apesar de não ser tão útil, 
pois esse recurso pode facilmente ser substituído por um campo de texto feito em HTML. 
Para chamarmos esta caixa de diálogo, usamos a função prompt() que recebe uma string como 
parâmetro. Esse parâmetro será a mensagem a ser exibida dentro da caixa de diálogo. 
A caixa de diálogo de prompt possui três elementos: um campo input para texto, um botão OK e outro 
CANCELAR. 
A função prompt () sempre irá retornar um valor, ou seja, podemos gravar o resultado da função em 
uma variável ou algo assim. Se clicarmos no botão OK, o valor a ser retornado será o que estiver escrito 
no campo de texto, mesmo se ele estiver vazio. Se clicarmos em CANCELAR, o valor retornado será 
null. 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
33 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
Abaixo criamos um exemplo no qual exige que o usuário digite o nome dele. Para isso, colocamos o 
prompt dentro de uma estrutura de repetição while que tem a seguinte condição: se o resultado for null (ou 
seja, se o usuário clicar em cancelar), ou então, se o resultado for vazio (ou seja, se o usuário não digitar 
nada e clicar no OK), neste caso, deve-se executar a repetição. 
Dessa forma nos asseguramos que o usuário sempre irá digitar alguma coisa dentro da caixa de diálogo. 
 
4.3 Confirm 
A caixa de diálogo de confirmação é chamada pela função confirm() e tem apenas dois botões: um OK 
e outro CANCELAR. Assim como a função prompt(), a função confirm() também retorna um valor que 
pode ser true (verdadeiro) ou false (falso). 
Como confirm() retorna um valor booleano, isso o torna ideal para ser usado com uma estrutura seletiva 
if. Por exemplo, podemos usar a caixa de diálogo de confirmação antes de redirecionarmos uma página 
para executar uma rotina para apagar algum registro do banco de dados. 
No exemplo abaixo, não iremos tão profundamente quanto o cenário acima, pois envolve mais do que 
simples JavaScript. Aqui, apenas iremos demonstrar o resultado do clique em algum dos dois botões. 
 
Exercícios Propostos 
Usando a instrução alert, faça um algoritmo que exibe para o usuário a mensagem: “Bom dia usuário.”. 
Faça um algoritmo que solicite ao usuário que digite seu nome, após o usuário dar entrada da informação 
exiba a seguinte mensagem para o mesmo: “Bom dia nome_usuario.”. Onde há nome_usuario será 
Escola Estadual de Educação Profissional [EEEP] Ensino Médio Integrado à Educação Profissional 
 
34 
Informática – Programação para Web (JavaScript/PHP/MySQL) 
 
colocado o nome que o usuário digitou. 
Faça um algoritmo que solicite o ano que o usuário nasceu e depois o ano atual, seu código irá pegar essas 
informações e calcular a idade do usuário e exibi-la na tela usando alert(). 
Faça um algoritmo que receba dois números inteiros, digitados pelo usuário, e exiba em um único alert() o 
resultado da soma, subtração, multiplicação e divisão entre os dois números digitados. 
Faça um algoritmo que peça sua amado(a) em casamento ou namoro, utilize a instrução confirm(). Caso 
ele(a) aceite exiba a mensagem “Eu aceito”, caso contrário exiba a mensagem “Desculpa, não posso 
aceitar”. 
Faça um algoritmo de validação de login. O usuário irá digitar o login e depois a senha. Se o login 
digitado é igual a “root” e a senha “qwe123”, então exiba a mensagem “Acesso permitido”, senão exiba 
“Login/Senha inválidos”; 
Escreva um algoritmo que calcula quantos meses um funcionário trabalhou para uma empresa. Solicite o 
dia, mês e ano que um funcionário foi contratado e depois o dia, mês e ano que ele foi demitido. Calcule 
quantos meses esse funcionário trabalhou nessa empresa. 
Escreva um algoritmo que receba a idade do usuário e se a idade